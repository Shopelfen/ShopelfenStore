name: Build & Release Extension (GitHub Only)

on:
  push:
    branches:
      - main
    paths:
      - '**'
  workflow_dispatch:

env:
  EXTENSION_NAME: ShopelfenStore

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install shopware-cli
        uses: FriendsOfShopware/shopware-cli-action@v1
        with:
          version: latest

      - name: Build & create zip
        env:
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          shopware-cli extension zip --git-commit ${{ github.sha }} . --release
          mv ${{ env.EXTENSION_NAME }}-${{ github.sha }}.zip ${{ env.EXTENSION_NAME }}.zip

      - name: Upload ZIP as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.EXTENSION_NAME }}
          path: ${{ env.EXTENSION_NAME }}.zip

      - name: Extract version from composer.json
        run: |
          echo "EXTENSION_VERSION=$(jq -r '.version' composer.json)" >> $GITHUB_ENV

      - name: Check if Git Tag already exists
        uses: mukunku/tag-exists-action@v1.6.0
        id: checkTag
        with:
          tag: ${{ env.EXTENSION_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate ZIP
        run: shopware-cli extension validate $(pwd)/${{ env.EXTENSION_NAME }}.zip

      - name: Extract Changelog
        if: steps.checkTag.outputs.exists != 'true'
        run: shopware-cli extension get-changelog $(pwd)/ > /tmp/changelog.txt

      - name: Clean repo and prepare release content
        run: |
          unzip -o -q "${EXTENSION_NAME}.zip" -d ./toDeploy
          mv "${EXTENSION_NAME}.zip" /tmp/
          find ./ -maxdepth 1 ! -name "toDeploy" ! -name ".git" ! -name "." ! -name ".." -exec rm -rf {} \;
          mv ./toDeploy/${EXTENSION_NAME}/* ./
          rm -rf ./toDeploy
          rm -rf ./vendor

      - name: Commit and Tag
        if: steps.checkTag.outputs.exists != 'true'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add -f .
          git commit -m "chore: Build release"
          git tag ${{ env.EXTENSION_VERSION }}
          git push origin ${{ env.EXTENSION_VERSION }}

      - name: Create GitHub Release
        if: steps.checkTag.outputs.exists != 'true'
        uses: ncipollo/release-action@v1
        with:
          artifacts: /tmp/${{ env.EXTENSION_NAME }}.zip
          tag: ${{ env.EXTENSION_VERSION }}
          name: ${{ env.EXTENSION_VERSION }}
          bodyFile: /tmp/changelog.txt